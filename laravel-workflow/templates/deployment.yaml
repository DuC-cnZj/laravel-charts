apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laravel-workflow.fullname" . }}
  labels:
    {{- include "laravel-workflow.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "laravel-workflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "laravel-workflow.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: laravel-env
          configMap:
            name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-configmap
            items: 
              - key: env
                path: .env
        - name: appconf
          configMap:
            name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-configmap
            items:
              - key: nginx.conf
                path: default.conf
    {{ if .Values.staticAssetsMount }}
        - name: shared-data
          emptyDir: {}
      initContainers:
      - name: static-mount
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/cp"]
        args: ["-r", "/var/www/html/public", "/tmp/git"]
        volumeMounts:
          - name: shared-data
            mountPath: /tmp/git
    {{ end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "laravel-workflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: enable_queue
              value: {{ default "false" .Values.enable_queue | quote }}
            - name: enable_cron
              value: {{ default "false" .Values.enable_cron | quote }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-secrets
                  key: db_host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-secrets
                  key: db_port
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-secrets
                  key: db_database
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-secrets
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name | printf "%s-%s" .Chart.Name }}-secrets
                  key: db_password
          volumeMounts:
            - name: laravel-env
              mountPath: /var/www/html/.env
              subPath: .env
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: "nginx:{{ .Values.nginx.tag }}"
          volumeMounts:
          - name: appconf
            mountPath: /etc/nginx/conf.d
        {{if .Values.staticAssetsMount }}
          - name: shared-data
            mountPath: /var/www/html
        {{ end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.envFile.HELM_PREFIX }}/ping
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.envFile.HELM_PREFIX }}/ping
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
